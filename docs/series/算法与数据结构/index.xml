<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法与数据结构 on Runz&#39;s Blog</title>
    <link>https://huoxj.github.io/series/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 算法与数据结构 on Runz&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>cn</language>
    <lastBuildDate>Fri, 28 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://huoxj.github.io/series/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>优雅的STL</title>
      <link>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84stl/</link>
      <pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84stl/</guid>
      <description>&lt;p&gt;同属&lt;em&gt;优雅的&lt;/em&gt;系列。致力于整理优雅、清晰的&lt;strong&gt;处理手法&lt;/strong&gt;，以及一些&lt;strong&gt;注意事项&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;p&gt;本篇记录了使用 C++ STL 刷题时的一些心得。&lt;/p&gt;&#xA;&lt;h2 id=&#34;容器导致的迭代器--指针失效&#34;&gt;容器导致的迭代器 / 指针失效&lt;/h2&gt;&#xA;&lt;p&gt;蓦然回首，那迭代器 / 指针已经&lt;strong&gt;挂了&lt;/strong&gt;！等待你的是 &lt;code&gt;heap-use-after-free&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;auto&lt;/span&gt; arr &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; vector&lt;span style=&#34;color:#81a1c1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;auto&lt;/span&gt; it &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; arr&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;begin&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arr&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;push_back&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;*&lt;/span&gt;it&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// BOOM! Heap use after free&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;容器扩容时偷偷搬家了，房东就不要拿原来的水电气单子去收钱了，会变得不幸（&lt;/p&gt;&#xA;&lt;p&gt;用索引来记录是一个不太完美的解决方案。&lt;/p&gt;&#xA;&lt;p&gt;或者，提前预判搬家后迭代器该指向什么位置。仍然不完美，只能处理部分情况。&lt;/p&gt;&#xA;&lt;p&gt;完美的解决方案？404 not found。&lt;/p&gt;</description>
    </item>
    <item>
      <title>优雅的链表</title>
      <link>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84%E9%93%BE%E8%A1%A8/</guid>
      <description>&lt;p&gt;当然不会讲链表的概念等等。主要收集一些刷力扣过程中，链表题的一些优雅的处理手法。优雅简洁易懂的代码是信仰和追求。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dummy-node&#34;&gt;Dummy node&lt;/h2&gt;&#xA;&lt;p&gt;在短小精悍的题中，加一堆特判无疑是往刷好的白墙上&lt;strong&gt;扔狗屎&lt;/strong&gt;。在设计链表的算法时，往往是考虑链表的&lt;strong&gt;一般（中间）节点&lt;/strong&gt;，所以算法常常需要给头尾加上特判，这太不好了。&lt;/p&gt;&#xA;&lt;p&gt;于是一个朴素的 trick 诞生了，在头或者尾加上一个 &lt;strong&gt;dummy node&lt;/strong&gt;，这样我们关心的所有节点都是一般的中间结点了，实现了真正的公平和大一统。&lt;/p&gt;&#xA;&lt;p&gt;此法&lt;strong&gt;非常有效&lt;/strong&gt;，建议多加利用。&lt;/p&gt;</description>
    </item>
    <item>
      <title>专题定位</title>
      <link>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%93%E9%A2%98%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%93%E9%A2%98%E5%AE%9A%E4%BD%8D/</guid>
      <description>&lt;p&gt;本专题(算法与数据结构)主要用以复习与回忆，内容量少且相当不全面。&lt;/p&gt;&#xA;&lt;p&gt;写这个专题的主要原因是刷力扣的时候唤起了曾经竞赛的回忆，借博客给这些陈旧的知识重新打包装好，顺便应对以后保研或者应聘的机试。当然，能学些以前不会的知识自然是最好的。&lt;/p&gt;&#xA;&lt;p&gt;主要内容参考 &lt;a href=&#34;https://oi-wiki.org/&#34;&gt;OI Wiki&lt;/a&gt;，内容分类也是相同的方式。&lt;/p&gt;&#xA;&lt;p&gt;如果要从0开始学还是去看 Wiki 或者别的教程罢。这样一方面能减少写文章的压力，另一方面能学了不至于白学。&lt;/p&gt;&#xA;&lt;h2 id=&#34;已更新&#34;&gt;已更新&lt;/h2&gt;&#xA;&lt;h3 id=&#34;数据结构&#34;&gt;数据结构&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单调队列&lt;/li&gt;&#xA;&lt;li&gt;单调栈&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;更新计划&#34;&gt;更新计划&lt;/h2&gt;&#xA;&lt;p&gt;基本是力扣&lt;/p&gt;</description>
    </item>
    <item>
      <title>单调队列 &amp; 单调栈</title>
      <link>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97--%E5%8D%95%E8%B0%83%E6%A0%88/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://huoxj.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97--%E5%8D%95%E8%B0%83%E6%A0%88/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;数据结构篇&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;省流&#34;&gt;省流&lt;/h2&gt;&#xA;&lt;p&gt;单调队列：获得 区间(滑动窗口)的 最值&lt;/p&gt;&#xA;&lt;p&gt;单调栈：获得 某元素 周围 第一个 大于或者小于它 的元素&lt;/p&gt;&#xA;&lt;p&gt;实际运用多为以上两种情况，但仍需活学活用，不能被上面的两种情况限制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;细说&#34;&gt;细说&lt;/h2&gt;&#xA;&lt;h3 id=&#34;单调队列&#34;&gt;单调队列&lt;/h3&gt;&#xA;&lt;h4 id=&#34;比喻&#34;&gt;比喻&lt;/h4&gt;&#xA;&lt;p&gt;之前在力扣评论区刷到过如下比喻：&lt;/p&gt;&#xA;&lt;p&gt;公司的所有员工按年龄排列成一个单调的队列。&lt;/p&gt;&#xA;&lt;p&gt;公司将不断招入年轻员工。如果年轻员工比某些老员工能力强，那就毫不犹豫踢掉这些老员工(补药啊)。&lt;/p&gt;&#xA;&lt;p&gt;同时，踢掉大于35岁的老员工，无论能力多强都踢掉。&lt;/p&gt;&#xA;&lt;p&gt;这个比喻就把单调队列的出入队概括完了，很好理解。&lt;/p&gt;&#xA;&lt;h4 id=&#34;为什么&#34;&gt;为什么&lt;/h4&gt;&#xA;&lt;p&gt;单调队列怎么做到通过维护一个队列，队头刚好是所求区间上的最大值呢（最小值同理，以下例子为最大值）？&lt;/p&gt;&#xA;&lt;p&gt;首先，很容易明白的一点，就是这个区间的最大值一定能留在队头。&lt;/p&gt;&#xA;&lt;p&gt;我们担心的是，这个最大值一旦离开区间了，谁来当二把手呢？&lt;/p&gt;&#xA;&lt;p&gt;我们想到可以搞个二把手候选人队列，有可能当二把手的元素都进来，从大到小排着，老大挂了就上老二。&lt;/p&gt;&#xA;&lt;p&gt;那为什么要让能力强的新人把比他弱的老东西踢掉呢？因为新人能活最久，并且当二把手的优先级也高于老东西，那这些老东西一定是不可能当二把手的，不符合我们队列的要求，所以直接踢掉。&lt;/p&gt;&#xA;&lt;h3 id=&#34;单调栈&#34;&gt;单调栈&lt;/h3&gt;&#xA;&lt;p&gt;单调栈也完全可以通过上面的比喻来理解。但是不能踢35岁老员工了，&lt;del&gt;单调栈是一个尊重老人的公司&lt;/del&gt;。&lt;/p&gt;&#xA;&lt;p&gt;获得 某元素 周围 第一个 大于或者小于它 的元素 是什么意思呢？&lt;/p&gt;&#xA;&lt;p&gt;当一个新人比一堆老员工强的时候，这些老员工全会被踢。所以，这个新人就是第一个比这些老员工强的人。换句话说，新入栈的元素是第一个比  因为这个元素而退栈的元素  大的元素。这句话很绕，慢点读别噎着了。&lt;/p&gt;&#xA;&lt;p&gt;但这样我们只能做一个方向。所以得维护两个单调栈，就能得到每个元素“周围”的满足要求的元素了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;练练手&#34;&gt;练练手&lt;/h2&gt;&#xA;&lt;h3 id=&#34;单调队列-1&#34;&gt;单调队列&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/sliding-window-maximum/description/?envType=study-plan-v2&amp;amp;envId=top-100-liked&#34;&gt;力扣-滑动窗口最大值&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2698&#34;&gt;P2698 [USACO12MAR] Flowerpot S - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a&gt; - 此题甚妙，有点难&lt;/p&gt;&#xA;&lt;h3 id=&#34;单调栈-1&#34;&gt;单调栈&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P5788&#34;&gt;P5788 【模板】单调栈 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P1901&#34;&gt;P1901 发射站 - 洛谷 | 计算机科学教育新生态 (luogu.com.cn)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
