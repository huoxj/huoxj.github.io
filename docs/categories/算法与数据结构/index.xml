<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法与数据结构 on Runz&#39;s Blog</title>
    <link>http://localhost:4647/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 算法与数据结构 on Runz&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2025 21:13:36 -0800</lastBuildDate>
    <atom:link href="http://localhost:4647/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>优雅的STL</title>
      <link>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84stl/</link>
      <pubDate>Fri, 28 Feb 2025 21:13:36 -0800</pubDate>
      <guid>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84stl/</guid>
      <description>同属系列。致力于整理优雅、清晰的，以及一些。 本篇记录了使用 C+TL 刷题时的一些心得。 蓦然回首，那迭代器 / 指针已经！等待你的是 &lt;code&gt;heap-use-after-free&lt;/code&gt;。 ```cpp a&amp;hellip;</description>
    </item>
    <item>
      <title>优雅的链表</title>
      <link>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Fri, 28 Feb 2025 20:59:47 -0800</pubDate>
      <guid>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BC%98%E9%9B%85%E7%9A%84%E9%93%BE%E8%A1%A8/</guid>
      <description>当然不会讲链表的概念等等。主要收集一些刷力扣过程中，链表题的一些优雅的处理手法。优雅简洁易懂的代码是信仰和追求。 在短小精悍的题中，加一堆特判无疑是往刷好的白墙上。在设计链表的算法时，往往是考虑链表的&amp;hellip;</description>
    </item>
    <item>
      <title>专题定位</title>
      <link>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%93%E9%A2%98%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Tue, 08 Oct 2024 15:03:29 -0800</pubDate>
      <guid>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%93%E9%A2%98%E5%AE%9A%E4%BD%8D/</guid>
      <description>本专题(算法与数据结构)主要用以复习与回忆，内容量少且相当不全面。 写这个专题的主要原因是刷力扣的时候唤起了曾经竞赛的回忆，借博客给这些陈旧的知识重新打包装好，顺便应对以后保研或者应聘的机试。当然，能&amp;hellip;</description>
    </item>
    <item>
      <title>单调队列 &amp; 单调栈</title>
      <link>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97--%E5%8D%95%E8%B0%83%E6%A0%88/</link>
      <pubDate>Mon, 07 Oct 2024 19:38:18 -0800</pubDate>
      <guid>http://localhost:4647/posts/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97--%E5%8D%95%E8%B0%83%E6%A0%88/</guid>
      <description>单调队列：获得 区间(滑动窗口)的 最值 单调栈：获得 某元素 周围 第一个 大于或者小于它 的元素 实际运用多为以上两种情况，但仍需活学活用，不能被上面的两种情况限制。 之前在力扣评论区刷到过如下比&amp;hellip;</description>
    </item>
  </channel>
</rss>
