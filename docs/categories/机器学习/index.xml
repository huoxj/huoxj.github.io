<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机器学习 on Runz&#39;s blog</title>
    <link>https://huoxj.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on Runz&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>huoxj_runz@gmail.com (Runz Liu)</managingEditor>
    <webMaster>huoxj_runz@gmail.com (Runz Liu)</webMaster>
    <copyright>@ 2025 Runz Liu</copyright>
    <lastBuildDate>Mon, 02 Dec 2024 20:29:40 -0800</lastBuildDate><atom:link href="https://huoxj.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytorch DataLoader 加速</title>
      <link>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/pytorch-dataloader-%E5%8A%A0%E9%80%9F/</link>
      <pubDate>Mon, 02 Dec 2024 20:29:40 -0800</pubDate>
      <author>huoxj_runz@gmail.com (Runz Liu)</author>
      <guid>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/pytorch-dataloader-%E5%8A%A0%E9%80%9F/</guid>
      <description>在训练机器学习作业的 ResNet 网络时，发现每一个 epoch 之前都会卡上十几二十秒才开始 模型真正的训练。具体表现如下： 一句话概括，是每个 epoch 前占用了绝大部分时间。 看下面两张图，&amp;hellip;</description>
      
    </item>
    
    <item>
      <title>K 邻近分类器</title>
      <link>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/k-%E9%82%BB%E8%BF%91%E5%88%86%E7%B1%BB%E5%99%A8/</link>
      <pubDate>Fri, 25 Oct 2024 20:03:20 -0800</pubDate>
      <author>huoxj_runz@gmail.com (Runz Liu)</author>
      <guid>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/k-%E9%82%BB%E8%BF%91%E5%88%86%E7%B1%BB%E5%99%A8/</guid>
      <description>对测试样本，找训练样本中最近的 $k$ 个，这 $k$ 个样本中标签最多的就是测试样本的类。 k-NN 的 $k=1$ 的特殊情况。</description>
      
    </item>
    
    <item>
      <title>决策树</title>
      <link>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%86%B3%E7%AD%96%E6%A0%91/</link>
      <pubDate>Mon, 30 Sep 2024 08:54:34 -0800</pubDate>
      <author>huoxj_runz@gmail.com (Runz Liu)</author>
      <guid>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%86%B3%E7%AD%96%E6%A0%91/</guid>
      <description>决策树就是一颗 &lt;code&gt;if-else&lt;/code&gt; 树。树的每一个结点代表一个决策（测试），同时也代表了这个决策所对应的一个样本空间。我们的目标就是通过多次产生 &lt;code&gt;if-else&lt;/code&gt; 分支，尽可能地让决策树的叶子结点只&amp;hellip;</description>
      
    </item>
    
    <item>
      <title>概要</title>
      <link>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%A6%82%E8%A6%81/</link>
      <pubDate>Fri, 16 Aug 2024 16:39:18 -0800</pubDate>
      <author>huoxj_runz@gmail.com (Runz Liu)</author>
      <guid>https://huoxj.github.io/posts/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%A6%82%E8%A6%81/</guid>
      <description>精度矩阵是二分类下的混淆矩阵 &lt;code&gt;TRUE&lt;/code&gt;/&lt;code&gt;FALSE&lt;/code&gt;: 预测结果与实际相符/不符 &lt;code&gt;POSITIVE&lt;/code&gt;/&lt;code&gt;NEGATIVE&lt;/code&gt;: 预测为真(阳性)/假(阴性) 对于两个样本 $xjin R^d$</description>
      
    </item>
    
  </channel>
</rss>
